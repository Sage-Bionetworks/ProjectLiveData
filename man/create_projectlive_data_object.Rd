% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_projectlive_data_object.R
\name{create_projectlive_data_object}
\alias{create_projectlive_data_object}
\title{Create Projectlive Data Object}
\usage{
create_projectlive_data_object(
  fileview_id,
  auth_token,
  project_ids_to_keep = NULL,
  project_ids_to_remove = NULL,
  fileview_columns = c(),
  verbose = F,
  upload_to_synapse = F,
  synapse_destination_id = NULL
)
}
\arguments{
\item{fileview_id}{The fileview used as the asset store to get the manifests
from}

\item{auth_token}{A synapse auth token}

\item{project_ids_to_keep}{A list of project ids to include}

\item{project_ids_to_remove}{A list of project ids to not include,
only used if project_ids_to_keep is NULL}

\item{fileview_columns}{A list of columns to include("id", "name"
"createdOn" and "projectId", always included.)}

\item{verbose}{T/F}

\item{upload_to_synapse}{T/F}

\item{synapse_destination_id}{A synapse ID, where the file will be stored at}
}
\description{
The main function for this package. This function will:
- download the projects associated fileview
- get the associated manifests for each project
- download and open each manifest
- group up the manifests into one table for each component type
- save this object as a .RDS file and upload to synapse
}
